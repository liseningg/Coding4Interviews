小招在玩一款游戏：在一个N层高的金字塔上，以金字塔顶为第一层，第i层有i个落点，每个落点有若干枚金币，在落点可以跳向左斜向下或向右斜向下的落点。
若知道金字塔的层数N及每层的金币数量分布，请计算小招在本次游戏中可以获得的最多金币数量。
n = int(input())
res = []
for i in range(n):
    res.append(list(map(int,input().split())))
dp = [[0]*n for _ in range(n)]
dp[0][0] = res[0][0]
 
for i in range(n-1):
    for j in range(i+1):
        dp[i+1][j] = max(dp[i+1][j],dp[i][j]+res[i+1][j])
        dp[i+1][j+1] = max(dp[i+1][j+1],dp[i][j]+res[i+1][j+1])
 
ans = -1
 
for i in range(n):
    ans = max(ans,dp[n-1][i])
 
print(ans)
