def swap():
    n = int(input())
    n *= 2
    seats = list(map(int, input().split()))
    pos = [0 for i in range(n)]
    for i in range(n):
        pos[seats[i]] = i
         
    count = 0
    for i in range(0, n-1, 2):
        p = seats[i] + 1 - ((seats[i] & 1) << 1)
        if seats[i+1] != p:
            k = pos[p]
            seats[k] = seats[i+1]
            pos[seats[i+1]] = k
            count += 1
             
    return count
 
print(swap())


import sys
n = int(sys.stdin.readline().strip())
nums = list(map(int, sys.stdin.readline().split()))
result = 0
length = len(nums)
index = {nums[i]: i for i in range(length)}
for i in range(0, length, 2):
    current = nums[i] + 1 if nums[i] & 1 == 0 else nums[i] - 1
    swap_idx = index[current]
    if abs(swap_idx - i) > 1:
        nums[i+1], nums[swap_idx] = nums[swap_idx], nums[i+1]
        index[nums[i+1]], index[nums[swap_idx]] = i+1, swap_idx
        result += 1
print(result)


n = int(input())
nums = [int(tmp) for tmp in input().split()]
mydict = {}
for i in range(len(nums)):
    mydict[nums[i]] = i
ans = 0
for i in range(n):
    if abs(nums[2*i+1]-nums[2*i]) == 1 and max(nums[2*i],nums[2*i+1]) % 2 == 1:
        continue
    else:
        ans += 1
        if nums[i*2] % 2 == 0:
            nums[mydict[nums[i*2]+1]],mydict[nums[i*2+1]] = nums[i*2+1],mydict[nums[i*2]+1]
             
        else:
            nums[mydict[nums[i*2]-1]],mydict[nums[i*2+1]] = nums[i*2+1],mydict[nums[i*2]-1]
print(ans)
